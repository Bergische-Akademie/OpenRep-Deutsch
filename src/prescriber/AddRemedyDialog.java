/*Copyright 2008 by Vladimir Polony, Stupy 24, Banska Bystrica, Slovakia

This file is part of OpenRep FREE homeopathic software.

    OpenRep FREE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenRep FREE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with OpenRep FREE.  If not, see <http://www.gnu.org/licenses/>.*/

/* Displays the dialog containing all the available remedies that can be added to the symptom
 * 
 *
 * Created on August 10, 2008, 12:57 PM
 */

package prescriber;

import java.awt.Font;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author  vladimir
 */
public class AddRemedyDialog extends javax.swing.JDialog {
    /** contains the currently opened repertory*/
    public Repertory current_repertory = null;
    /** contains the main frame of the application*/
    public JFrame mainFrame = null;
    /** contains the remedy ids selected to be added to the symptom*/
    public ArrayList<Short> remedy_id = new ArrayList();
    /** instance of main editor */
    public PrescriberView main_editor;
    

    /** Updates the contents of the RemedySymptoms tree based on the SelectedSymptoms tree
     * 
     */
    public void UpdateRemedySymptomsTree () {
        // the root node is ALWAYS called Results
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Results");
        // don't display anything if no repertory is opened
        if (current_repertory == null) return;
        
        // get the list of all available remedies
        ArrayList<Remedy> remedies = current_repertory.GetRemedies();
        
        // sort the remedies by name
        ArrayList<String> sorted_remedies = new ArrayList();
        for (int x = 0; x < remedies.size(); x++) {
            if (remedies.get(x) == null) continue;
            sorted_remedies.add(remedies.get(x).RemName);
        }
        Collections.sort(sorted_remedies);
        for (int x = 0; x < sorted_remedies.size(); x++) {
            // add the remedy
            DefaultMutableTreeNode temp = new DefaultMutableTreeNode(sorted_remedies.get(x));
            top.add(temp);
        }
        // update the model of the tree
        JTree x = new JTree(top);
        RemedyTree.setModel(x.getModel());
    }        
    
    /** Creates new form AddRemedyDialog */
    public AddRemedyDialog(java.awt.Frame parent, boolean modal, PrescriberView pw) {
        super(parent, modal);
        initComponents();
        this.main_editor = pw;

        int size = pw.config.GetValue(Configuration.Key_AddRemedyDialog_RemedyList);
        Font ft;
        if (size != -1) {
            ft = new Font(RemedyTree.getFont().getName(), RemedyTree.getFont().getStyle(), size);
            RemedyTree.setFont(ft);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        RemedyTree = new javax.swing.JTree();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(prescriber.PrescriberApp.class).getContext().getResourceMap(AddRemedyDialog.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setLabel(resourceMap.getString("jButton2.label")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setLabel(resourceMap.getString("jButton3.label")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        RemedyTree.setModel(null);
        RemedyTree.setName("RemedyTree"); // NOI18N
        RemedyTree.setRootVisible(false);
        RemedyTree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RemedyTreeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(RemedyTree);

        jButton4.setLabel(resourceMap.getString("jButton4.label")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 279, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButton3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 282, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   // displays the dialog used to create a new remedy
   AddNewRemedyDialog anrd = new AddNewRemedyDialog(mainFrame, true);
   anrd.setLocationRelativeTo(mainFrame);
   anrd.setVisible(true);
   // add the newly created remedy to the list
   if (anrd.remedy_name != null) {
       if (!current_repertory.AddRemedy(anrd.remedy_name, anrd.remedy_sc)) {
           JOptionPane.showMessageDialog(rootPane, "The remedy name (shortcut) is not well formed. Please remove the invalid characters from the remedy name (shortcut)");
       }
       UpdateRemedySymptomsTree();
   }
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   this.setVisible(false);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   // generate the list of selected remedies
   for (int x = 0; x < RemedyTree.getSelectionPaths().length; x++) {
       String remname = RemedyTree.getSelectionPaths()[x].toString();
       remedy_id.add((short)current_repertory.GetRemedyIndex(remname.substring(String.valueOf("Results, ").length()+1, remname.length()-1)));
   }
   this.setVisible(false);
}//GEN-LAST:event_jButton1ActionPerformed

private void RemedyTreeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RemedyTreeKeyPressed
    if (evt.isAltDown()) {
        if (evt.getKeyCode() == evt.VK_UP) {
            Utils.ChangeFont(RemedyTree, 1);
            main_editor.config.SetValue(Configuration.Key_AddRemedyDialog_RemedyList, RemedyTree.getFont().getSize());
        }
        else
        if (evt.getKeyCode() == evt.VK_DOWN) {
            Utils.ChangeFont(RemedyTree, -1);
            main_editor.config.SetValue(Configuration.Key_AddRemedyDialog_RemedyList, RemedyTree.getFont().getSize());
        }
    }
}//GEN-LAST:event_RemedyTreeKeyPressed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
   AddNewRemedyDialog anrd = new AddNewRemedyDialog(mainFrame, true);
   String remname = RemedyTree.getSelectionPath().toString().substring(String.valueOf("Results, ").length()+1, RemedyTree.getSelectionPath().toString().length()-1);
   String remsc = current_repertory.GetRemedySC(current_repertory.GetRemedyIndex(remname));
   anrd.RemedyNameEdit.setText(remname);
   anrd.RemedySCEdit.setText (remsc);
   anrd.setLocationRelativeTo(mainFrame);
   anrd.setVisible(true);
   // add the newly created remedy to the list
   if (anrd.remedy_name != null) {
       if (!current_repertory.RenameRemedy(current_repertory.GetRemedyIndex(remname), anrd.remedy_name, anrd.remedy_sc)) {
           JOptionPane.showMessageDialog(rootPane, "The remedy could not be renamed. The remedy name already exists.");
       }
       UpdateRemedySymptomsTree();
   }
}//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree RemedyTree;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
